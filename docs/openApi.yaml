openapi: 3.0.0
info:
    title: "Week 10 RevoU"
    version: 1.0.0
    description: "Transfer management api assignment"
servers:
    -   url: https://amethyst-giraffe-sock.cyclic.cloud
        description: "Production"
    -   url: http://localhost:4000
        description: "Development server"
paths:
    /api/users:
        get:
            summary: "Get all users"
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin' role."
            tags:
                - users
            responses:
                "200":
                    description: "Successful to get all users"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        success:
                                            example: true
                                        message:
                                            example: "Users fetched successfully"
                                    - type: object
                                    - properties:
                                        data:
                                            type: array
                                            items:
                                                $ref: "#/components/schemas/User"
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
                "500":
                    description: "Internal Server Error"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Internal server error occurred"
        patch:
            summary: "Update specific user"
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin' role."
            tags:
                - users
            parameters:
                -   in: query
                    name: _id
                    required: true
                    schema:
                        type: string
                    description: "ID of the user to update"
            responses:
                "204":
                    description: "User updated successfully"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        success:
                                            example: true
                                        message:
                                            example: "User updated successfully"
    /api/auth/register:
        post:
            summary: "Register an user account"
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RegisterUser"
            responses:
                "201":
                    description: "User created"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        success:
                                            example: true
                                    - type: object
                                    - properties:
                                        data:
                                            type: object
                                            properties:
                                                username:
                                                    type: string
                                                    example: andra
                                                role:
                                                    type: string
                                                    example: user
                "409":
                    description: "Conflict: Username already exist"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Username already exist"
                "500":
                    description: "Internal Server Error"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Internal server error occurred"
    /api/auth/login:
        post:
            summary: "Login an account"
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    example: andra
                                password:
                                    type: string
                                    example: andra123
            responses:
                "200":
                    description: "Succesfully login"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Succesfully login"
                                    - type: object
                                    - properties:
                                        data:
                                            type: object
                                            properties:
                                                token:
                                                    type: string
                                                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                "400":
                    description: "Bad Request"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Incorrect password"
                "401":
                    description: "Unauthorized"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized: Invalid credentials"
                "500":
                    description: "Internal Server Error"
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "An error occurred while processing the request"
    /api/schools:
        get:
            summary: Retrieve a list of schools.
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin', 'moderator', and 'user' role."
            tags:
                - Schools
            responses:
                "200":
                    description: List of schools.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        success:
                                            example: true
                                        message:
                                            example: "Schools fetched successfully"
                                    - type: object
                                    - properties:
                                        data:
                                            type: array
                                            items:
                                                allOf:
                                                    - properties:
                                                        id:
                                                            type: string
                                                    - $ref: "#/components/schemas/School"
                                                    - properties:
                                                        rating:
                                                            type: object
                                                            properties:
                                                                overall:
                                                                    type: number
                                                                    format: float
                                                                    example: 3.3
                                                                reputation:
                                                                    type: number
                                                                    format: int32
                                                                    example: 5
                                                                facilities:
                                                                    type: number
                                                                    format: int32
                                                                    example: 3
                                                                location:
                                                                    type: number
                                                                    format: int32
                                                                    example: 2
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
        post:
            summary: Add a new school to the platform.
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin', 'moderator', and 'user' role."
            tags:
                - Schools
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/School"
            responses:
                "201":
                    description: "Successfully added the school."
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        success:
                                            example: true
                                        message:
                                            type: string
                                            example: Successfully added the school.
                                    - type: object
                                    - properties:
                                        data:
                                            allOf:
                                                - $ref: "#/components/schemas/School"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        type: string
                                        example: School name cannot be empty or contain only whitespace.
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
                '409':
                    description: School already exists
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        type: string
                                        example: School already exist
                '500':
                    description: An error occurred
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        type: string
                                        example: An error occurred during adding school
    /api/schools/{id}:
        get:
            summary: Retrieve details of a specific school.
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin', 'moderator', and 'user' role."
            tags:
                - Schools
            parameters:
                -   in: path
                    name: id
                    schema:
                        type: string
                    required: true
                    description: ID of the school to retrieve.
            responses:
                "200":
                    description: School details.
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
        put:
            summary: Update details of a specific school.
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin', and 'moderator'."
            tags:
                - Schools
            parameters:
                -   in: path
                    name: id
                    schema:
                        type: string
                    required: true
                    description: ID of the school to update.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/School"
            responses:
                "200":
                    description: School updated successfully.
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
        delete:
            summary: Delete a specific school.
            security:
                - apiKeyAuth: []
            description: "This endpoint can only be accessed by users with the 'admin', and 'moderator'."
            tags:
                - Schools
            parameters:
                -   in: path
                    name: id
                    schema:
                        type: string
                    required: true
                    description: ID of the school to delete.
            responses:
                "204":
                    description: School deleted successfully.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "The school successfully deleted"
                                        data:
                                            allOf:
                                                - $ref: "#/components/schemas/School"
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
                "404":
                    description: School not found.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "School with the specified ID not found"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Internal server error occurred"
    /api/reviews:
        get:
            summary: Get all reviews
            tags:
                - Reviews
            responses:
                '200':
                    description: Reviews fetched successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: true
                                    message:
                                        example: "Reviews fetched successfully"
                                    data:
                                        type: array
                                        items:
                                            allOf:
                                                - properties:
                                                    id:
                                                        type: string
                                                    userId:
                                                        type: string
                                                    schoolId:
                                                        type: string
                                                -  $ref: "#/components/schemas/Review"  # Reference to your Review schema
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
                '500':
                    description: An error occurred while fetching Reviews
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        example: "An error occurred while fetching Reviews"
    /api/schools/{schoolId}/reviews:
        post:
            summary: Add a review to a school
            tags:
                - Reviews
            parameters:
                -   in: path
                    name: schoolId
                    required: true
                    schema:
                        type: string
                    description: ID of the school
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Review"
            responses:
                '201':
                    description: Successfully added the review.
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: true
                                    message:
                                        type: string
                                        example: Successfully added the review.
                                - type: object
                                - properties:
                                    data:
                                        allOf:
                                        -   type: object
                                            properties:
                                                schoolId:
                                                    type: string
                                                userid:
                                                    type: string
                                        -   $ref: "#/components/schemas/Review"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        type: string
                                        example: Invalid review data.
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - properties:
                                        message:
                                            example: "Unauthorized"
                '404':
                    description: School not found
                    content:
                        application/json:
                            schema:
                                allOf:
                                - $ref: "#/components/schemas/ApiResponse"
                                - properties:
                                    success:
                                        example: false
                                    message:
                                        type: string
                                        example: School not found.
components:
    securitySchemes:
        apiKeyAuth:
                type: apiKey
                in: header
                name: Authorization
                description: "Provide a valid JWT token in the Authorization header"
    schemas:
        RegisterUser:
            type: object
            properties:
                username:
                    type: string
                    example: andra
                password:
                    type: string
                    example: andra123
                role:
                    type: string
                    enum:
                        - admin
                        - moderator
                        - user
                    example: admin
        User:
            allOf:
                - type: object
                - properties:
                    id:
                        type: string
                - $ref: "#/components/schemas/RegisterUser"
        ApiResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                message:
                    type: string
        School:
            type: object
            properties:
                name:
                    type: string
                    example: Universitas Indonesia
                location:
                    type: string
                    example: Depok
                description:
                    type: string
                    example: Universitas jaket kuning
        Review:
            type: object
            properties:
                rating:
                    type: object
                    properties:
                        reputation:
                            type: number
                            format: int32
                            minimum: 1
                            maximum: 5
                            example: 5
                        location:
                            type: number
                            format: int32
                            minimum: 1
                            maximum: 5
                            example: 3
                        facilities:
                            type: number
                            format: int32
                            minimum: 1
                            maximum: 5
                            example: 4
                comment:
                    type: string
                    example: "Great University!"
    
